// generated from rosidl_adapter/resource/msg.idl.em
// with input from px4_msgs/msg/CommanderState.msg
// generated code does not contain a copyright notice


module px4_msgs {
  module msg {
    module CommanderState_Constants {
      const uint8 MAIN_STATE_MANUAL = 0;
      const uint8 MAIN_STATE_ALTCTL = 1;
      const uint8 MAIN_STATE_POSCTL = 2;
      const uint8 MAIN_STATE_AUTO_MISSION = 3;
      const uint8 MAIN_STATE_AUTO_LOITER = 4;
      const uint8 MAIN_STATE_AUTO_RTL = 5;
      const uint8 MAIN_STATE_ACRO = 6;
      const uint8 MAIN_STATE_OFFBOARD = 7;
      const uint8 MAIN_STATE_STAB = 8;
      const uint8 MAIN_STATE_AUTO_TAKEOFF = 10;
      const uint8 MAIN_STATE_AUTO_LAND = 11;
      const uint8 MAIN_STATE_AUTO_FOLLOW_TARGET = 12;
      const uint8 MAIN_STATE_AUTO_PRECLAND = 13;
      const uint8 MAIN_STATE_ORBIT = 14;
      const uint8 MAIN_STATE_AUTO_VTOL_TAKEOFF = 15;
      const uint8 MAIN_STATE_MAX = 16;
    };
    @verbatim (language="comment", text=
      " Main state, i.e. what user wants. Controlled by RC or from ground station via telemetry link.")
    struct CommanderState {
      @verbatim (language="comment", text=
        " time since system start (microseconds)")
      uint64 timestamp;

      uint8 main_state;

      uint16 main_state_changes;
    };
  };
};
