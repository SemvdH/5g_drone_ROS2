// generated from rosidl_adapter/resource/msg.idl.em
// with input from px4_msgs/msg/TestMotor.msg
// generated code does not contain a copyright notice


module px4_msgs {
  module msg {
    module TestMotor_Constants {
      const uint8 NUM_MOTOR_OUTPUTS = 8;
      const uint8 ACTION_STOP = 0;
      const uint8 ACTION_RUN = 1;
      const uint8 ORB_QUEUE_LENGTH = 4;
    };
    struct TestMotor {
      @verbatim (language="comment", text=
        " time since system start (microseconds)")
      uint64 timestamp;

      @verbatim (language="comment", text=
        " one of ACTION_* (applies to all motors)")
      uint8 action;

      @verbatim (language="comment", text=
        " number of motor to spin")
      @unit (value="0..N-1")
      uint32 motor_number;

      @verbatim (language="comment", text=
        " output power, range, -1 to stop individual motor")
      @unit (value="0..1")
      float value;

      @verbatim (language="comment", text=
        " timeout in ms after which to exit test mode (if 0, do not time out)")
      uint32 timeout_ms;

      @verbatim (language="comment", text=
        " select output driver (for boards with multiple outputs, like IO+FMU)")
      uint8 driver_instance;
    };
  };
};
