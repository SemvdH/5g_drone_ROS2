// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file OnboardComputerStatus.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _PX4_MSGS_MSG_ONBOARDCOMPUTERSTATUS_H_
#define _PX4_MSGS_MSG_ONBOARDCOMPUTERSTATUS_H_

// TODO Poner en el contexto.

#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif
#else
#define eProsima_user_DllExport
#endif

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(OnboardComputerStatus_SOURCE)
#define OnboardComputerStatus_DllAPI __declspec( dllexport )
#else
#define OnboardComputerStatus_DllAPI __declspec( dllimport )
#endif // OnboardComputerStatus_SOURCE
#else
#define OnboardComputerStatus_DllAPI
#endif
#else
#define OnboardComputerStatus_DllAPI
#endif // _WIN32

namespace eprosima
{
    namespace fastcdr
    {
        class Cdr;
    }
}


namespace px4_msgs
{
    namespace msg
    {
        typedef std::array<uint8_t, 8> uint8__8;
        typedef std::array<uint8_t, 10> uint8__10;
        typedef std::array<uint8_t, 4> uint8__4;
        typedef std::array<int8_t, 8> int8__8;
        typedef std::array<int16_t, 4> int16__4;
        typedef std::array<uint32_t, 4> uint32__4;
        typedef std::array<uint32_t, 6> uint32__6;
        /*!
         * @brief This class represents the structure OnboardComputerStatus defined by the user in the IDL file.
         * @ingroup ONBOARDCOMPUTERSTATUS
         */
        class OnboardComputerStatus
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport OnboardComputerStatus();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~OnboardComputerStatus();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object px4_msgs::msg::OnboardComputerStatus that will be copied.
             */
            eProsima_user_DllExport OnboardComputerStatus(const OnboardComputerStatus &x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object px4_msgs::msg::OnboardComputerStatus that will be copied.
             */
            eProsima_user_DllExport OnboardComputerStatus(OnboardComputerStatus &&x);

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object px4_msgs::msg::OnboardComputerStatus that will be copied.
             */
            eProsima_user_DllExport OnboardComputerStatus& operator=(const OnboardComputerStatus &x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object px4_msgs::msg::OnboardComputerStatus that will be copied.
             */
            eProsima_user_DllExport OnboardComputerStatus& operator=(OnboardComputerStatus &&x);

            /*!
             * @brief This function sets a value in member timestamp
             * @param _timestamp New value for member timestamp
             */
            eProsima_user_DllExport void timestamp(uint64_t _timestamp);

            /*!
             * @brief This function returns the value of member timestamp
             * @return Value of member timestamp
             */
            eProsima_user_DllExport uint64_t timestamp() const;

            /*!
             * @brief This function returns a reference to member timestamp
             * @return Reference to member timestamp
             */
            eProsima_user_DllExport uint64_t& timestamp();

            /*!
             * @brief This function sets a value in member uptime
             * @param _uptime New value for member uptime
             */
            eProsima_user_DllExport void uptime(uint32_t _uptime);

            /*!
             * @brief This function returns the value of member uptime
             * @return Value of member uptime
             */
            eProsima_user_DllExport uint32_t uptime() const;

            /*!
             * @brief This function returns a reference to member uptime
             * @return Reference to member uptime
             */
            eProsima_user_DllExport uint32_t& uptime();

            /*!
             * @brief This function sets a value in member type
             * @param _type New value for member type
             */
            eProsima_user_DllExport void type(uint8_t _type);

            /*!
             * @brief This function returns the value of member type
             * @return Value of member type
             */
            eProsima_user_DllExport uint8_t type() const;

            /*!
             * @brief This function returns a reference to member type
             * @return Reference to member type
             */
            eProsima_user_DllExport uint8_t& type();

            /*!
             * @brief This function copies the value in member cpu_cores
             * @param _cpu_cores New value to be copied in member cpu_cores
             */
            eProsima_user_DllExport void cpu_cores(const px4_msgs::msg::uint8__8 &_cpu_cores);

            /*!
             * @brief This function moves the value in member cpu_cores
             * @param _cpu_cores New value to be moved in member cpu_cores
             */
            eProsima_user_DllExport void cpu_cores(px4_msgs::msg::uint8__8 &&_cpu_cores);

            /*!
             * @brief This function returns a constant reference to member cpu_cores
             * @return Constant reference to member cpu_cores
             */
            eProsima_user_DllExport const px4_msgs::msg::uint8__8& cpu_cores() const;

            /*!
             * @brief This function returns a reference to member cpu_cores
             * @return Reference to member cpu_cores
             */
            eProsima_user_DllExport px4_msgs::msg::uint8__8& cpu_cores();
            /*!
             * @brief This function copies the value in member cpu_combined
             * @param _cpu_combined New value to be copied in member cpu_combined
             */
            eProsima_user_DllExport void cpu_combined(const px4_msgs::msg::uint8__10 &_cpu_combined);

            /*!
             * @brief This function moves the value in member cpu_combined
             * @param _cpu_combined New value to be moved in member cpu_combined
             */
            eProsima_user_DllExport void cpu_combined(px4_msgs::msg::uint8__10 &&_cpu_combined);

            /*!
             * @brief This function returns a constant reference to member cpu_combined
             * @return Constant reference to member cpu_combined
             */
            eProsima_user_DllExport const px4_msgs::msg::uint8__10& cpu_combined() const;

            /*!
             * @brief This function returns a reference to member cpu_combined
             * @return Reference to member cpu_combined
             */
            eProsima_user_DllExport px4_msgs::msg::uint8__10& cpu_combined();
            /*!
             * @brief This function copies the value in member gpu_cores
             * @param _gpu_cores New value to be copied in member gpu_cores
             */
            eProsima_user_DllExport void gpu_cores(const px4_msgs::msg::uint8__4 &_gpu_cores);

            /*!
             * @brief This function moves the value in member gpu_cores
             * @param _gpu_cores New value to be moved in member gpu_cores
             */
            eProsima_user_DllExport void gpu_cores(px4_msgs::msg::uint8__4 &&_gpu_cores);

            /*!
             * @brief This function returns a constant reference to member gpu_cores
             * @return Constant reference to member gpu_cores
             */
            eProsima_user_DllExport const px4_msgs::msg::uint8__4& gpu_cores() const;

            /*!
             * @brief This function returns a reference to member gpu_cores
             * @return Reference to member gpu_cores
             */
            eProsima_user_DllExport px4_msgs::msg::uint8__4& gpu_cores();
            /*!
             * @brief This function copies the value in member gpu_combined
             * @param _gpu_combined New value to be copied in member gpu_combined
             */
            eProsima_user_DllExport void gpu_combined(const px4_msgs::msg::uint8__10 &_gpu_combined);

            /*!
             * @brief This function moves the value in member gpu_combined
             * @param _gpu_combined New value to be moved in member gpu_combined
             */
            eProsima_user_DllExport void gpu_combined(px4_msgs::msg::uint8__10 &&_gpu_combined);

            /*!
             * @brief This function returns a constant reference to member gpu_combined
             * @return Constant reference to member gpu_combined
             */
            eProsima_user_DllExport const px4_msgs::msg::uint8__10& gpu_combined() const;

            /*!
             * @brief This function returns a reference to member gpu_combined
             * @return Reference to member gpu_combined
             */
            eProsima_user_DllExport px4_msgs::msg::uint8__10& gpu_combined();
            /*!
             * @brief This function sets a value in member temperature_board
             * @param _temperature_board New value for member temperature_board
             */
            eProsima_user_DllExport void temperature_board(int8_t _temperature_board);

            /*!
             * @brief This function returns the value of member temperature_board
             * @return Value of member temperature_board
             */
            eProsima_user_DllExport int8_t temperature_board() const;

            /*!
             * @brief This function returns a reference to member temperature_board
             * @return Reference to member temperature_board
             */
            eProsima_user_DllExport int8_t& temperature_board();

            /*!
             * @brief This function copies the value in member temperature_core
             * @param _temperature_core New value to be copied in member temperature_core
             */
            eProsima_user_DllExport void temperature_core(const px4_msgs::msg::int8__8 &_temperature_core);

            /*!
             * @brief This function moves the value in member temperature_core
             * @param _temperature_core New value to be moved in member temperature_core
             */
            eProsima_user_DllExport void temperature_core(px4_msgs::msg::int8__8 &&_temperature_core);

            /*!
             * @brief This function returns a constant reference to member temperature_core
             * @return Constant reference to member temperature_core
             */
            eProsima_user_DllExport const px4_msgs::msg::int8__8& temperature_core() const;

            /*!
             * @brief This function returns a reference to member temperature_core
             * @return Reference to member temperature_core
             */
            eProsima_user_DllExport px4_msgs::msg::int8__8& temperature_core();
            /*!
             * @brief This function copies the value in member fan_speed
             * @param _fan_speed New value to be copied in member fan_speed
             */
            eProsima_user_DllExport void fan_speed(const px4_msgs::msg::int16__4 &_fan_speed);

            /*!
             * @brief This function moves the value in member fan_speed
             * @param _fan_speed New value to be moved in member fan_speed
             */
            eProsima_user_DllExport void fan_speed(px4_msgs::msg::int16__4 &&_fan_speed);

            /*!
             * @brief This function returns a constant reference to member fan_speed
             * @return Constant reference to member fan_speed
             */
            eProsima_user_DllExport const px4_msgs::msg::int16__4& fan_speed() const;

            /*!
             * @brief This function returns a reference to member fan_speed
             * @return Reference to member fan_speed
             */
            eProsima_user_DllExport px4_msgs::msg::int16__4& fan_speed();
            /*!
             * @brief This function sets a value in member ram_usage
             * @param _ram_usage New value for member ram_usage
             */
            eProsima_user_DllExport void ram_usage(uint32_t _ram_usage);

            /*!
             * @brief This function returns the value of member ram_usage
             * @return Value of member ram_usage
             */
            eProsima_user_DllExport uint32_t ram_usage() const;

            /*!
             * @brief This function returns a reference to member ram_usage
             * @return Reference to member ram_usage
             */
            eProsima_user_DllExport uint32_t& ram_usage();

            /*!
             * @brief This function sets a value in member ram_total
             * @param _ram_total New value for member ram_total
             */
            eProsima_user_DllExport void ram_total(uint32_t _ram_total);

            /*!
             * @brief This function returns the value of member ram_total
             * @return Value of member ram_total
             */
            eProsima_user_DllExport uint32_t ram_total() const;

            /*!
             * @brief This function returns a reference to member ram_total
             * @return Reference to member ram_total
             */
            eProsima_user_DllExport uint32_t& ram_total();

            /*!
             * @brief This function copies the value in member storage_type
             * @param _storage_type New value to be copied in member storage_type
             */
            eProsima_user_DllExport void storage_type(const px4_msgs::msg::uint32__4 &_storage_type);

            /*!
             * @brief This function moves the value in member storage_type
             * @param _storage_type New value to be moved in member storage_type
             */
            eProsima_user_DllExport void storage_type(px4_msgs::msg::uint32__4 &&_storage_type);

            /*!
             * @brief This function returns a constant reference to member storage_type
             * @return Constant reference to member storage_type
             */
            eProsima_user_DllExport const px4_msgs::msg::uint32__4& storage_type() const;

            /*!
             * @brief This function returns a reference to member storage_type
             * @return Reference to member storage_type
             */
            eProsima_user_DllExport px4_msgs::msg::uint32__4& storage_type();
            /*!
             * @brief This function copies the value in member storage_usage
             * @param _storage_usage New value to be copied in member storage_usage
             */
            eProsima_user_DllExport void storage_usage(const px4_msgs::msg::uint32__4 &_storage_usage);

            /*!
             * @brief This function moves the value in member storage_usage
             * @param _storage_usage New value to be moved in member storage_usage
             */
            eProsima_user_DllExport void storage_usage(px4_msgs::msg::uint32__4 &&_storage_usage);

            /*!
             * @brief This function returns a constant reference to member storage_usage
             * @return Constant reference to member storage_usage
             */
            eProsima_user_DllExport const px4_msgs::msg::uint32__4& storage_usage() const;

            /*!
             * @brief This function returns a reference to member storage_usage
             * @return Reference to member storage_usage
             */
            eProsima_user_DllExport px4_msgs::msg::uint32__4& storage_usage();
            /*!
             * @brief This function copies the value in member storage_total
             * @param _storage_total New value to be copied in member storage_total
             */
            eProsima_user_DllExport void storage_total(const px4_msgs::msg::uint32__4 &_storage_total);

            /*!
             * @brief This function moves the value in member storage_total
             * @param _storage_total New value to be moved in member storage_total
             */
            eProsima_user_DllExport void storage_total(px4_msgs::msg::uint32__4 &&_storage_total);

            /*!
             * @brief This function returns a constant reference to member storage_total
             * @return Constant reference to member storage_total
             */
            eProsima_user_DllExport const px4_msgs::msg::uint32__4& storage_total() const;

            /*!
             * @brief This function returns a reference to member storage_total
             * @return Reference to member storage_total
             */
            eProsima_user_DllExport px4_msgs::msg::uint32__4& storage_total();
            /*!
             * @brief This function copies the value in member link_type
             * @param _link_type New value to be copied in member link_type
             */
            eProsima_user_DllExport void link_type(const px4_msgs::msg::uint32__6 &_link_type);

            /*!
             * @brief This function moves the value in member link_type
             * @param _link_type New value to be moved in member link_type
             */
            eProsima_user_DllExport void link_type(px4_msgs::msg::uint32__6 &&_link_type);

            /*!
             * @brief This function returns a constant reference to member link_type
             * @return Constant reference to member link_type
             */
            eProsima_user_DllExport const px4_msgs::msg::uint32__6& link_type() const;

            /*!
             * @brief This function returns a reference to member link_type
             * @return Reference to member link_type
             */
            eProsima_user_DllExport px4_msgs::msg::uint32__6& link_type();
            /*!
             * @brief This function copies the value in member link_tx_rate
             * @param _link_tx_rate New value to be copied in member link_tx_rate
             */
            eProsima_user_DllExport void link_tx_rate(const px4_msgs::msg::uint32__6 &_link_tx_rate);

            /*!
             * @brief This function moves the value in member link_tx_rate
             * @param _link_tx_rate New value to be moved in member link_tx_rate
             */
            eProsima_user_DllExport void link_tx_rate(px4_msgs::msg::uint32__6 &&_link_tx_rate);

            /*!
             * @brief This function returns a constant reference to member link_tx_rate
             * @return Constant reference to member link_tx_rate
             */
            eProsima_user_DllExport const px4_msgs::msg::uint32__6& link_tx_rate() const;

            /*!
             * @brief This function returns a reference to member link_tx_rate
             * @return Reference to member link_tx_rate
             */
            eProsima_user_DllExport px4_msgs::msg::uint32__6& link_tx_rate();
            /*!
             * @brief This function copies the value in member link_rx_rate
             * @param _link_rx_rate New value to be copied in member link_rx_rate
             */
            eProsima_user_DllExport void link_rx_rate(const px4_msgs::msg::uint32__6 &_link_rx_rate);

            /*!
             * @brief This function moves the value in member link_rx_rate
             * @param _link_rx_rate New value to be moved in member link_rx_rate
             */
            eProsima_user_DllExport void link_rx_rate(px4_msgs::msg::uint32__6 &&_link_rx_rate);

            /*!
             * @brief This function returns a constant reference to member link_rx_rate
             * @return Constant reference to member link_rx_rate
             */
            eProsima_user_DllExport const px4_msgs::msg::uint32__6& link_rx_rate() const;

            /*!
             * @brief This function returns a reference to member link_rx_rate
             * @return Reference to member link_rx_rate
             */
            eProsima_user_DllExport px4_msgs::msg::uint32__6& link_rx_rate();
            /*!
             * @brief This function copies the value in member link_tx_max
             * @param _link_tx_max New value to be copied in member link_tx_max
             */
            eProsima_user_DllExport void link_tx_max(const px4_msgs::msg::uint32__6 &_link_tx_max);

            /*!
             * @brief This function moves the value in member link_tx_max
             * @param _link_tx_max New value to be moved in member link_tx_max
             */
            eProsima_user_DllExport void link_tx_max(px4_msgs::msg::uint32__6 &&_link_tx_max);

            /*!
             * @brief This function returns a constant reference to member link_tx_max
             * @return Constant reference to member link_tx_max
             */
            eProsima_user_DllExport const px4_msgs::msg::uint32__6& link_tx_max() const;

            /*!
             * @brief This function returns a reference to member link_tx_max
             * @return Reference to member link_tx_max
             */
            eProsima_user_DllExport px4_msgs::msg::uint32__6& link_tx_max();
            /*!
             * @brief This function copies the value in member link_rx_max
             * @param _link_rx_max New value to be copied in member link_rx_max
             */
            eProsima_user_DllExport void link_rx_max(const px4_msgs::msg::uint32__6 &_link_rx_max);

            /*!
             * @brief This function moves the value in member link_rx_max
             * @param _link_rx_max New value to be moved in member link_rx_max
             */
            eProsima_user_DllExport void link_rx_max(px4_msgs::msg::uint32__6 &&_link_rx_max);

            /*!
             * @brief This function returns a constant reference to member link_rx_max
             * @return Constant reference to member link_rx_max
             */
            eProsima_user_DllExport const px4_msgs::msg::uint32__6& link_rx_max() const;

            /*!
             * @brief This function returns a reference to member link_rx_max
             * @return Reference to member link_rx_max
             */
            eProsima_user_DllExport px4_msgs::msg::uint32__6& link_rx_max();

            /*!
             * @brief This function returns the maximum serialized size of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(const px4_msgs::msg::OnboardComputerStatus& data, size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(eprosima::fastcdr::Cdr &cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(eprosima::fastcdr::Cdr &cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(eprosima::fastcdr::Cdr &cdr) const;

        private:
            uint64_t m_timestamp;
            uint32_t m_uptime;
            uint8_t m_type;
            px4_msgs::msg::uint8__8 m_cpu_cores;
            px4_msgs::msg::uint8__10 m_cpu_combined;
            px4_msgs::msg::uint8__4 m_gpu_cores;
            px4_msgs::msg::uint8__10 m_gpu_combined;
            int8_t m_temperature_board;
            px4_msgs::msg::int8__8 m_temperature_core;
            px4_msgs::msg::int16__4 m_fan_speed;
            uint32_t m_ram_usage;
            uint32_t m_ram_total;
            px4_msgs::msg::uint32__4 m_storage_type;
            px4_msgs::msg::uint32__4 m_storage_usage;
            px4_msgs::msg::uint32__4 m_storage_total;
            px4_msgs::msg::uint32__6 m_link_type;
            px4_msgs::msg::uint32__6 m_link_tx_rate;
            px4_msgs::msg::uint32__6 m_link_rx_rate;
            px4_msgs::msg::uint32__6 m_link_tx_max;
            px4_msgs::msg::uint32__6 m_link_rx_max;
        };
    }
}

#endif // _PX4_MSGS_MSG_ONBOARDCOMPUTERSTATUS_H_