// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file VehicleCommand.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _PX4_MSGS_MSG_VEHICLECOMMAND_H_
#define _PX4_MSGS_MSG_VEHICLECOMMAND_H_

// TODO Poner en el contexto.

#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif
#else
#define eProsima_user_DllExport
#endif

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(VehicleCommand_SOURCE)
#define VehicleCommand_DllAPI __declspec( dllexport )
#else
#define VehicleCommand_DllAPI __declspec( dllimport )
#endif // VehicleCommand_SOURCE
#else
#define VehicleCommand_DllAPI
#endif
#else
#define VehicleCommand_DllAPI
#endif // _WIN32

namespace eprosima
{
    namespace fastcdr
    {
        class Cdr;
    }
}


namespace px4_msgs
{
    namespace msg
    {
        namespace VehicleCommand_Constants
        {
            const uint16_t VEHICLE_CMD_CUSTOM_0 = 0;
            const uint16_t VEHICLE_CMD_CUSTOM_1 = 1;
            const uint16_t VEHICLE_CMD_CUSTOM_2 = 2;
            const uint16_t VEHICLE_CMD_NAV_WAYPOINT = 16;
            const uint16_t VEHICLE_CMD_NAV_LOITER_UNLIM = 17;
            const uint16_t VEHICLE_CMD_NAV_LOITER_TURNS = 18;
            const uint16_t VEHICLE_CMD_NAV_LOITER_TIME = 19;
            const uint16_t VEHICLE_CMD_NAV_RETURN_TO_LAUNCH = 20;
            const uint16_t VEHICLE_CMD_NAV_LAND = 21;
            const uint16_t VEHICLE_CMD_NAV_TAKEOFF = 22;
            const uint16_t VEHICLE_CMD_NAV_PRECLAND = 23;
            const uint16_t VEHICLE_CMD_DO_ORBIT = 34;
            const uint16_t VEHICLE_CMD_NAV_ROI = 80;
            const uint16_t VEHICLE_CMD_NAV_PATHPLANNING = 81;
            const uint16_t VEHICLE_CMD_NAV_VTOL_TAKEOFF = 84;
            const uint16_t VEHICLE_CMD_NAV_VTOL_LAND = 85;
            const uint16_t VEHICLE_CMD_NAV_GUIDED_LIMITS = 90;
            const uint16_t VEHICLE_CMD_NAV_GUIDED_MASTER = 91;
            const uint16_t VEHICLE_CMD_NAV_DELAY = 93;
            const uint16_t VEHICLE_CMD_NAV_LAST = 95;
            const uint16_t VEHICLE_CMD_CONDITION_DELAY = 112;
            const uint16_t VEHICLE_CMD_CONDITION_CHANGE_ALT = 113;
            const uint16_t VEHICLE_CMD_CONDITION_DISTANCE = 114;
            const uint16_t VEHICLE_CMD_CONDITION_YAW = 115;
            const uint16_t VEHICLE_CMD_CONDITION_LAST = 159;
            const uint16_t VEHICLE_CMD_CONDITION_GATE = 4501;
            const uint16_t VEHICLE_CMD_DO_SET_MODE = 176;
            const uint16_t VEHICLE_CMD_DO_JUMP = 177;
            const uint16_t VEHICLE_CMD_DO_CHANGE_SPEED = 178;
            const uint16_t VEHICLE_CMD_DO_SET_HOME = 179;
            const uint16_t VEHICLE_CMD_DO_SET_PARAMETER = 180;
            const uint16_t VEHICLE_CMD_DO_SET_RELAY = 181;
            const uint16_t VEHICLE_CMD_DO_REPEAT_RELAY = 182;
            const uint16_t VEHICLE_CMD_DO_SET_SERVO = 183;
            const uint16_t VEHICLE_CMD_DO_REPEAT_SERVO = 184;
            const uint16_t VEHICLE_CMD_DO_FLIGHTTERMINATION = 185;
            const uint16_t VEHICLE_CMD_DO_SET_ACTUATOR = 187;
            const uint16_t VEHICLE_CMD_DO_LAND_START = 189;
            const uint16_t VEHICLE_CMD_DO_GO_AROUND = 191;
            const uint16_t VEHICLE_CMD_DO_REPOSITION = 192;
            const uint16_t VEHICLE_CMD_DO_PAUSE_CONTINUE = 193;
            const uint16_t VEHICLE_CMD_DO_SET_ROI_LOCATION = 195;
            const uint16_t VEHICLE_CMD_DO_SET_ROI_WPNEXT_OFFSET = 196;
            const uint16_t VEHICLE_CMD_DO_SET_ROI_NONE = 197;
            const uint16_t VEHICLE_CMD_DO_CONTROL_VIDEO = 200;
            const uint16_t VEHICLE_CMD_DO_SET_ROI = 201;
            const uint16_t VEHICLE_CMD_DO_DIGICAM_CONTROL = 203;
            const uint16_t VEHICLE_CMD_DO_MOUNT_CONFIGURE = 204;
            const uint16_t VEHICLE_CMD_DO_MOUNT_CONTROL = 205;
            const uint16_t VEHICLE_CMD_DO_SET_CAM_TRIGG_DIST = 206;
            const uint16_t VEHICLE_CMD_DO_FENCE_ENABLE = 207;
            const uint16_t VEHICLE_CMD_DO_PARACHUTE = 208;
            const uint16_t VEHICLE_CMD_DO_MOTOR_TEST = 209;
            const uint16_t VEHICLE_CMD_DO_INVERTED_FLIGHT = 210;
            const uint16_t VEHICLE_CMD_DO_SET_CAM_TRIGG_INTERVAL = 214;
            const uint16_t VEHICLE_CMD_DO_MOUNT_CONTROL_QUAT = 220;
            const uint16_t VEHICLE_CMD_DO_GUIDED_MASTER = 221;
            const uint16_t VEHICLE_CMD_DO_GUIDED_LIMITS = 222;
            const uint16_t VEHICLE_CMD_DO_LAST = 240;
            const uint16_t VEHICLE_CMD_PREFLIGHT_CALIBRATION = 241;
            const uint16_t PREFLIGHT_CALIBRATION_TEMPERATURE_CALIBRATION = 3;
            const uint16_t VEHICLE_CMD_PREFLIGHT_SET_SENSOR_OFFSETS = 242;
            const uint16_t VEHICLE_CMD_PREFLIGHT_UAVCAN = 243;
            const uint16_t VEHICLE_CMD_PREFLIGHT_STORAGE = 245;
            const uint16_t VEHICLE_CMD_PREFLIGHT_REBOOT_SHUTDOWN = 246;
            const uint16_t VEHICLE_CMD_OBLIQUE_SURVEY = 260;
            const uint16_t VEHICLE_CMD_GIMBAL_DEVICE_INFORMATION = 283;
            const uint16_t VEHICLE_CMD_MISSION_START = 300;
            const uint16_t VEHICLE_CMD_ACTUATOR_TEST = 310;
            const uint16_t VEHICLE_CMD_CONFIGURE_ACTUATOR = 311;
            const uint16_t VEHICLE_CMD_COMPONENT_ARM_DISARM = 400;
            const uint16_t VEHICLE_CMD_INJECT_FAILURE = 420;
            const uint16_t VEHICLE_CMD_START_RX_PAIR = 500;
            const uint16_t VEHICLE_CMD_REQUEST_MESSAGE = 512;
            const uint16_t VEHICLE_CMD_SET_CAMERA_MODE = 530;
            const uint16_t VEHICLE_CMD_SET_CAMERA_ZOOM = 531;
            const uint16_t VEHICLE_CMD_SET_CAMERA_FOCUS = 532;
            const uint16_t VEHICLE_CMD_DO_GIMBAL_MANAGER_PITCHYAW = 1000;
            const uint16_t VEHICLE_CMD_DO_GIMBAL_MANAGER_CONFIGURE = 1001;
            const uint16_t VEHICLE_CMD_IMAGE_START_CAPTURE = 2000;
            const uint16_t VEHICLE_CMD_DO_TRIGGER_CONTROL = 2003;
            const uint16_t VEHICLE_CMD_VIDEO_START_CAPTURE = 2500;
            const uint16_t VEHICLE_CMD_VIDEO_STOP_CAPTURE = 2501;
            const uint16_t VEHICLE_CMD_LOGGING_START = 2510;
            const uint16_t VEHICLE_CMD_LOGGING_STOP = 2511;
            const uint16_t VEHICLE_CMD_CONTROL_HIGH_LATENCY = 2600;
            const uint16_t VEHICLE_CMD_DO_VTOL_TRANSITION = 3000;
            const uint16_t VEHICLE_CMD_ARM_AUTHORIZATION_REQUEST = 3001;
            const uint16_t VEHICLE_CMD_PAYLOAD_PREPARE_DEPLOY = 30001;
            const uint16_t VEHICLE_CMD_PAYLOAD_CONTROL_DEPLOY = 30002;
            const uint16_t VEHICLE_CMD_FIXED_MAG_CAL_YAW = 42006;
            const uint32_t VEHICLE_CMD_PX4_INTERNAL_START = 65537;
            const uint32_t VEHICLE_CMD_SET_GPS_GLOBAL_ORIGIN = 100000;
            const uint8_t VEHICLE_CMD_RESULT_ACCEPTED = 0;
            const uint8_t VEHICLE_CMD_RESULT_TEMPORARILY_REJECTED = 1;
            const uint8_t VEHICLE_CMD_RESULT_DENIED = 2;
            const uint8_t VEHICLE_CMD_RESULT_UNSUPPORTED = 3;
            const uint8_t VEHICLE_CMD_RESULT_FAILED = 4;
            const uint8_t VEHICLE_CMD_RESULT_IN_PROGRESS = 5;
            const uint8_t VEHICLE_CMD_RESULT_ENUM_END = 6;
            const uint8_t VEHICLE_MOUNT_MODE_RETRACT = 0;
            const uint8_t VEHICLE_MOUNT_MODE_NEUTRAL = 1;
            const uint8_t VEHICLE_MOUNT_MODE_MAVLINK_TARGETING = 2;
            const uint8_t VEHICLE_MOUNT_MODE_RC_TARGETING = 3;
            const uint8_t VEHICLE_MOUNT_MODE_GPS_POINT = 4;
            const uint8_t VEHICLE_MOUNT_MODE_ENUM_END = 5;
            const uint8_t VEHICLE_ROI_NONE = 0;
            const uint8_t VEHICLE_ROI_WPNEXT = 1;
            const uint8_t VEHICLE_ROI_WPINDEX = 2;
            const uint8_t VEHICLE_ROI_LOCATION = 3;
            const uint8_t VEHICLE_ROI_TARGET = 4;
            const uint8_t VEHICLE_ROI_ENUM_END = 5;
            const uint8_t VEHICLE_CAMERA_ZOOM_TYPE_STEP = 0;
            const uint8_t VEHICLE_CAMERA_ZOOM_TYPE_CONTINUOUS = 1;
            const uint8_t VEHICLE_CAMERA_ZOOM_TYPE_RANGE = 2;
            const uint8_t VEHICLE_CAMERA_ZOOM_TYPE_FOCAL_LENGTH = 3;
            const uint8_t PARACHUTE_ACTION_DISABLE = 0;
            const uint8_t PARACHUTE_ACTION_ENABLE = 1;
            const uint8_t PARACHUTE_ACTION_RELEASE = 2;
            const uint8_t FAILURE_UNIT_SENSOR_GYRO = 0;
            const uint8_t FAILURE_UNIT_SENSOR_ACCEL = 1;
            const uint8_t FAILURE_UNIT_SENSOR_MAG = 2;
            const uint8_t FAILURE_UNIT_SENSOR_BARO = 3;
            const uint8_t FAILURE_UNIT_SENSOR_GPS = 4;
            const uint8_t FAILURE_UNIT_SENSOR_OPTICAL_FLOW = 5;
            const uint8_t FAILURE_UNIT_SENSOR_VIO = 6;
            const uint8_t FAILURE_UNIT_SENSOR_DISTANCE_SENSOR = 7;
            const uint8_t FAILURE_UNIT_SENSOR_AIRSPEED = 8;
            const uint8_t FAILURE_UNIT_SYSTEM_BATTERY = 100;
            const uint8_t FAILURE_UNIT_SYSTEM_MOTOR = 101;
            const uint8_t FAILURE_UNIT_SYSTEM_SERVO = 102;
            const uint8_t FAILURE_UNIT_SYSTEM_AVOIDANCE = 103;
            const uint8_t FAILURE_UNIT_SYSTEM_RC_SIGNAL = 104;
            const uint8_t FAILURE_UNIT_SYSTEM_MAVLINK_SIGNAL = 105;
            const uint8_t FAILURE_TYPE_OK = 0;
            const uint8_t FAILURE_TYPE_OFF = 1;
            const uint8_t FAILURE_TYPE_STUCK = 2;
            const uint8_t FAILURE_TYPE_GARBAGE = 3;
            const uint8_t FAILURE_TYPE_WRONG = 4;
            const uint8_t FAILURE_TYPE_SLOW = 5;
            const uint8_t FAILURE_TYPE_DELAYED = 6;
            const uint8_t FAILURE_TYPE_INTERMITTENT = 7;
            const uint8_t SPEED_TYPE_AIRSPEED = 0;
            const uint8_t SPEED_TYPE_GROUNDSPEED = 1;
            const uint8_t SPEED_TYPE_CLIMB_SPEED = 2;
            const uint8_t SPEED_TYPE_DESCEND_SPEED = 3;
            const int8_t ARMING_ACTION_DISARM = 0;
            const int8_t ARMING_ACTION_ARM = 1;
            const uint8_t ORB_QUEUE_LENGTH = 8;
        }
        /*!
         * @brief This class represents the structure VehicleCommand defined by the user in the IDL file.
         * @ingroup VEHICLECOMMAND
         */
        class VehicleCommand
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport VehicleCommand();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~VehicleCommand();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object px4_msgs::msg::VehicleCommand that will be copied.
             */
            eProsima_user_DllExport VehicleCommand(const VehicleCommand &x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object px4_msgs::msg::VehicleCommand that will be copied.
             */
            eProsima_user_DllExport VehicleCommand(VehicleCommand &&x);

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object px4_msgs::msg::VehicleCommand that will be copied.
             */
            eProsima_user_DllExport VehicleCommand& operator=(const VehicleCommand &x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object px4_msgs::msg::VehicleCommand that will be copied.
             */
            eProsima_user_DllExport VehicleCommand& operator=(VehicleCommand &&x);

            /*!
             * @brief This function sets a value in member timestamp
             * @param _timestamp New value for member timestamp
             */
            eProsima_user_DllExport void timestamp(uint64_t _timestamp);

            /*!
             * @brief This function returns the value of member timestamp
             * @return Value of member timestamp
             */
            eProsima_user_DllExport uint64_t timestamp() const;

            /*!
             * @brief This function returns a reference to member timestamp
             * @return Reference to member timestamp
             */
            eProsima_user_DllExport uint64_t& timestamp();

            /*!
             * @brief This function sets a value in member param1
             * @param _param1 New value for member param1
             */
            eProsima_user_DllExport void param1(float _param1);

            /*!
             * @brief This function returns the value of member param1
             * @return Value of member param1
             */
            eProsima_user_DllExport float param1() const;

            /*!
             * @brief This function returns a reference to member param1
             * @return Reference to member param1
             */
            eProsima_user_DllExport float& param1();

            /*!
             * @brief This function sets a value in member param2
             * @param _param2 New value for member param2
             */
            eProsima_user_DllExport void param2(float _param2);

            /*!
             * @brief This function returns the value of member param2
             * @return Value of member param2
             */
            eProsima_user_DllExport float param2() const;

            /*!
             * @brief This function returns a reference to member param2
             * @return Reference to member param2
             */
            eProsima_user_DllExport float& param2();

            /*!
             * @brief This function sets a value in member param3
             * @param _param3 New value for member param3
             */
            eProsima_user_DllExport void param3(float _param3);

            /*!
             * @brief This function returns the value of member param3
             * @return Value of member param3
             */
            eProsima_user_DllExport float param3() const;

            /*!
             * @brief This function returns a reference to member param3
             * @return Reference to member param3
             */
            eProsima_user_DllExport float& param3();

            /*!
             * @brief This function sets a value in member param4
             * @param _param4 New value for member param4
             */
            eProsima_user_DllExport void param4(float _param4);

            /*!
             * @brief This function returns the value of member param4
             * @return Value of member param4
             */
            eProsima_user_DllExport float param4() const;

            /*!
             * @brief This function returns a reference to member param4
             * @return Reference to member param4
             */
            eProsima_user_DllExport float& param4();

            /*!
             * @brief This function sets a value in member param5
             * @param _param5 New value for member param5
             */
            eProsima_user_DllExport void param5(double _param5);

            /*!
             * @brief This function returns the value of member param5
             * @return Value of member param5
             */
            eProsima_user_DllExport double param5() const;

            /*!
             * @brief This function returns a reference to member param5
             * @return Reference to member param5
             */
            eProsima_user_DllExport double& param5();

            /*!
             * @brief This function sets a value in member param6
             * @param _param6 New value for member param6
             */
            eProsima_user_DllExport void param6(double _param6);

            /*!
             * @brief This function returns the value of member param6
             * @return Value of member param6
             */
            eProsima_user_DllExport double param6() const;

            /*!
             * @brief This function returns a reference to member param6
             * @return Reference to member param6
             */
            eProsima_user_DllExport double& param6();

            /*!
             * @brief This function sets a value in member param7
             * @param _param7 New value for member param7
             */
            eProsima_user_DllExport void param7(float _param7);

            /*!
             * @brief This function returns the value of member param7
             * @return Value of member param7
             */
            eProsima_user_DllExport float param7() const;

            /*!
             * @brief This function returns a reference to member param7
             * @return Reference to member param7
             */
            eProsima_user_DllExport float& param7();

            /*!
             * @brief This function sets a value in member command
             * @param _command New value for member command
             */
            eProsima_user_DllExport void command(uint32_t _command);

            /*!
             * @brief This function returns the value of member command
             * @return Value of member command
             */
            eProsima_user_DllExport uint32_t command() const;

            /*!
             * @brief This function returns a reference to member command
             * @return Reference to member command
             */
            eProsima_user_DllExport uint32_t& command();

            /*!
             * @brief This function sets a value in member target_system
             * @param _target_system New value for member target_system
             */
            eProsima_user_DllExport void target_system(uint8_t _target_system);

            /*!
             * @brief This function returns the value of member target_system
             * @return Value of member target_system
             */
            eProsima_user_DllExport uint8_t target_system() const;

            /*!
             * @brief This function returns a reference to member target_system
             * @return Reference to member target_system
             */
            eProsima_user_DllExport uint8_t& target_system();

            /*!
             * @brief This function sets a value in member target_component
             * @param _target_component New value for member target_component
             */
            eProsima_user_DllExport void target_component(uint8_t _target_component);

            /*!
             * @brief This function returns the value of member target_component
             * @return Value of member target_component
             */
            eProsima_user_DllExport uint8_t target_component() const;

            /*!
             * @brief This function returns a reference to member target_component
             * @return Reference to member target_component
             */
            eProsima_user_DllExport uint8_t& target_component();

            /*!
             * @brief This function sets a value in member source_system
             * @param _source_system New value for member source_system
             */
            eProsima_user_DllExport void source_system(uint8_t _source_system);

            /*!
             * @brief This function returns the value of member source_system
             * @return Value of member source_system
             */
            eProsima_user_DllExport uint8_t source_system() const;

            /*!
             * @brief This function returns a reference to member source_system
             * @return Reference to member source_system
             */
            eProsima_user_DllExport uint8_t& source_system();

            /*!
             * @brief This function sets a value in member source_component
             * @param _source_component New value for member source_component
             */
            eProsima_user_DllExport void source_component(uint8_t _source_component);

            /*!
             * @brief This function returns the value of member source_component
             * @return Value of member source_component
             */
            eProsima_user_DllExport uint8_t source_component() const;

            /*!
             * @brief This function returns a reference to member source_component
             * @return Reference to member source_component
             */
            eProsima_user_DllExport uint8_t& source_component();

            /*!
             * @brief This function sets a value in member confirmation
             * @param _confirmation New value for member confirmation
             */
            eProsima_user_DllExport void confirmation(uint8_t _confirmation);

            /*!
             * @brief This function returns the value of member confirmation
             * @return Value of member confirmation
             */
            eProsima_user_DllExport uint8_t confirmation() const;

            /*!
             * @brief This function returns a reference to member confirmation
             * @return Reference to member confirmation
             */
            eProsima_user_DllExport uint8_t& confirmation();

            /*!
             * @brief This function sets a value in member from_external
             * @param _from_external New value for member from_external
             */
            eProsima_user_DllExport void from_external(bool _from_external);

            /*!
             * @brief This function returns the value of member from_external
             * @return Value of member from_external
             */
            eProsima_user_DllExport bool from_external() const;

            /*!
             * @brief This function returns a reference to member from_external
             * @return Reference to member from_external
             */
            eProsima_user_DllExport bool& from_external();


            /*!
             * @brief This function returns the maximum serialized size of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(const px4_msgs::msg::VehicleCommand& data, size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(eprosima::fastcdr::Cdr &cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(eprosima::fastcdr::Cdr &cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(eprosima::fastcdr::Cdr &cdr) const;

        private:
            uint64_t m_timestamp;
            float m_param1;
            float m_param2;
            float m_param3;
            float m_param4;
            double m_param5;
            double m_param6;
            float m_param7;
            uint32_t m_command;
            uint8_t m_target_system;
            uint8_t m_target_component;
            uint8_t m_source_system;
            uint8_t m_source_component;
            uint8_t m_confirmation;
            bool m_from_external;
        };
    }
}

#endif // _PX4_MSGS_MSG_VEHICLECOMMAND_H_